# -*- coding: utf-8 -*-

# Бригада скорой помощи выехала по вызову в один из отделенных районов. К сожалению,
# когда диспетчер получил вызов, он успел записать только адрес дома и номер 
# квартиры K1, а затем связь прервалась. Однако он вспомнил, что по этому же адресу
# дома некоторое время назад скорая помощь выезжала в квартиру K2, которая 
# расположена в подъезда P2 на этаже N2. Известно, что в доме M этажей и количество 
# квартир на каждой лестничной площадке одинаково. Напишите программу, которая 
# вычилсяет номер подъезда P1 и номер этажа N1 квартиры K1.

# Формат ввода
# Во входном файле записаны пять положительных целых чисел K1, M, K2, P2, N2. Все
#  числа не превосходят 10^6.

# Формат вывода
# Выведите два числа P1 и N1. Если входные данные не позволяют однозначно 
# определить P1 или N1, вместо соответствующего числа напечатайте 0. Если входные 
# данные противоречивы, напечатайте два числа –1 (минус один).

import time

start = time.time()

temp_1 = [89, 20, 41, 1, 11]
temp_2 = [11, 1, 1, 1, 1]
temp_3 = [3, 2, 2, 2, 1]


def address(x):
    # Номер квартиры вызвавшего скорую
    k1 = x[0]
    # Количество этажей в доме
    m = x[1]
    # Номер квартиры из предыдущего опыта
    k2 = x[2]
    # Номер подъезда из предыдущего опыта
    p2 = x[3]
    # Этаж из предыдущего опыта
    n2 = x[4]
    
    if m != 1:
        for i in range(500):
            if i != 0 and n2 == ((k2-1)//i)+1:
                p1 = (((k1 - 1) // i) // (m - 1)) + 1
                n1 = (((k1 - 1) // i) % (m - 1))
    else:
        n1 = 1
        for i in range(500):
            if i != 0:
                while k1 % i != 0:
                    k1 = k1 + 1
                    p1 = k1 // i

    if k2 < p2 * n2 or n2 > m or k2 // p2 < m:
        p1 = -1
        n1 = -1

    if p2 == 1 and n2 == 1:
        p1 = -1

    return p1, n1
    
    
print(address(temp_1))
print(address(temp_2))
print(address(temp_3))

print('Время выполнения -', time.time() - start)